// <auto-generated />
using System;
using Bookstorage.DAL.Databases;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace bookstorage.DAL.Migrations
{
    [DbContext(typeof(PGSQLContext))]
    [Migration("20190329205918_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("teste")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Bookstorage.DAL.Models.Author", b =>
                {
                    b.Property<Guid>("authorId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("name");

                    b.Property<string>("nationality");

                    b.HasKey("authorId");

                    b.ToTable("Author");
                });

            modelBuilder.Entity("Bookstorage.DAL.Models.Book", b =>
                {
                    b.Property<Guid>("bookId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("authorId");

                    b.Property<Guid>("genreId");

                    b.Property<string>("name");

                    b.Property<float>("price");

                    b.HasKey("bookId");

                    b.HasIndex("authorId");

                    b.HasIndex("genreId");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("Bookstorage.DAL.Models.BookGenre", b =>
                {
                    b.Property<Guid>("genreId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("description");

                    b.Property<string>("initials");

                    b.HasKey("genreId");

                    b.ToTable("BookGenre");
                });

            modelBuilder.Entity("Bookstorage.DAL.Models.Book", b =>
                {
                    b.HasOne("Bookstorage.DAL.Models.Author", "author")
                        .WithMany("books")
                        .HasForeignKey("authorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bookstorage.DAL.Models.BookGenre", "genre")
                        .WithMany("books")
                        .HasForeignKey("genreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
